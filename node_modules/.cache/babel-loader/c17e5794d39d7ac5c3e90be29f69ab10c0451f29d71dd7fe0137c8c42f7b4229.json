{"ast":null,"code":"var _jsxFileName = \"/Users/kanishqmersa/Desktop/quicksell/kanban-board/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTickets } from \"../Api\"; // Mock API call to fetch tickets\nimport Column from \"./Column\"; // Import Column component\nimport \"./Board.css\"; // Import board-specific styles\n\nimport TopBar from './Topbar'; // Import the TopBar component\nimport './Board.css'; // For custom CSS\n\n// Priority labels mapping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst priorityLabels = {\n  \"1\": \"Urgent\",\n  \"2\": \"High\",\n  \"3\": \"Medium\",\n  \"4\": \"Low\",\n  \"5\": \"No priority\"\n};\nconst Board = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [grouping, setGrouping] = useState(\"priority\");\n  const [sorting, setSorting] = useState(\"priority\");\n  const [users, setUsers] = useState([]);\n\n  // Fetch tickets from an API\n  useEffect(() => {\n    const getTickets = async () => {\n      const data = await fetchTickets(); // Replace with actual API call\n      setTickets(data.tickets);\n      setUsers(data.users);\n    };\n    getTickets();\n  }, []);\n\n  // Group tickets by a specific key (e.g., priority)\n  const groupBy = (arr, key) => {\n    const grouped = arr.reduce((acc, curr) => {\n      (acc[curr[key]] = acc[curr[key]] || []).push(curr);\n      return acc;\n    }, {});\n    return Object.keys(grouped).map(key => ({\n      title: key,\n      tickets: grouped[key]\n    }));\n  };\n  const findUsername = userId => {\n    const user = users.find(user => user.id === userId);\n    return user ? user.name : \"Unknown User\";\n  };\n  const groupTickets = () => {\n    let groupedTickets = groupBy(tickets, grouping);\n\n    // Apply the priority labels if grouping by priority\n    if (grouping === \"user\") {\n      groupedTickets = groupBy(tickets, \"userId\");\n\n      // Replace userId with the actual username for display\n      groupedTickets = groupedTickets.map(group => ({\n        ...group,\n        title: findUsername(group.title)\n      }));\n    } else if (grouping === \"priority\") {\n      groupedTickets = groupedTickets.map(group => ({\n        ...group,\n        title: priorityLabels[group.title] || \"No priority\"\n      }));\n    } else {\n      // Default behavior: grouping by priority or another field\n      groupedTickets = groupBy(tickets, grouping);\n    }\n\n    // Sort tickets within each group\n    groupedTickets.forEach(group => {\n      if (sorting === \"priority\") {\n        group.tickets.sort((a, b) => b.priority - a.priority);\n      } else {\n        group.tickets.sort((a, b) => a.title.localeCompare(b.title));\n      }\n    });\n    return groupedTickets;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      setGrouping: setGrouping,\n      setSorting: setSorting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: groupTickets().map(group => /*#__PURE__*/_jsxDEV(Column, {\n        title: group.title,\n        tickets: group.tickets,\n        count: group.tickets.length\n      }, group.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"iTUAou9+0cT/ODELIDW/3gRyx6g=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","fetchTickets","Column","TopBar","jsxDEV","_jsxDEV","priorityLabels","Board","_s","tickets","setTickets","grouping","setGrouping","sorting","setSorting","users","setUsers","getTickets","data","groupBy","arr","key","grouped","reduce","acc","curr","push","Object","keys","map","title","findUsername","userId","user","find","id","name","groupTickets","groupedTickets","group","forEach","sort","a","b","priority","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","count","length","_c","$RefreshReg$"],"sources":["/Users/kanishqmersa/Desktop/quicksell/kanban-board/src/components/Board.js"],"sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { fetchTickets } from \"../Api\"; // Mock API call to fetch tickets\nimport Column from \"./Column\"; // Import Column component\nimport \"./Board.css\"; // Import board-specific styles\n\n\nimport TopBar from './Topbar'; // Import the TopBar component\nimport './Board.css'; // For custom CSS\n\n// Priority labels mapping\nconst priorityLabels = {\n  \"1\": \"Urgent\",\n  \"2\": \"High\",\n  \"3\": \"Medium\",\n  \"4\": \"Low\",\n  \"5\": \"No priority\",\n};\n\nconst Board = () => {\n  const [tickets, setTickets] = useState([]);\n  const [grouping, setGrouping] = useState(\"priority\");\n  const [sorting, setSorting] = useState(\"priority\");\n  const [users, setUsers] = useState([]);\n\n  // Fetch tickets from an API\n  useEffect(() => {\n    const getTickets = async () => {\n      const data = await fetchTickets(); // Replace with actual API call\n      setTickets(data.tickets);\n      setUsers(data.users);\n    };\n    getTickets();\n  }, []);\n\n  // Group tickets by a specific key (e.g., priority)\n  const groupBy = (arr, key) => {\n    const grouped = arr.reduce((acc, curr) => {\n      (acc[curr[key]] = acc[curr[key]] || []).push(curr);\n      return acc;\n    }, {});\n    return Object.keys(grouped).map((key) => ({\n      title: key,\n      tickets: grouped[key],\n    }));\n  };\n\n  const findUsername = (userId) => {\n        const user = users.find((user) => user.id === userId);\n        return user ? user.name : \"Unknown User\";\n      };\n\n  const groupTickets = () => {\n    let groupedTickets = groupBy(tickets, grouping);\n\n    // Apply the priority labels if grouping by priority\n    if (grouping === \"user\") {\n      groupedTickets = groupBy(tickets, \"userId\");\n\n      // Replace userId with the actual username for display\n      groupedTickets = groupedTickets.map((group) => ({\n        ...group,\n        title: findUsername(group.title),\n      }));\n    }\n    else if (grouping === \"priority\") {\n      groupedTickets = groupedTickets.map((group) => ({\n        ...group,\n        title: priorityLabels[group.title] || \"No priority\",\n      }));\n    }\n    else {\n            // Default behavior: grouping by priority or another field\n            groupedTickets = groupBy(tickets, grouping);\n          }\n\n    // Sort tickets within each group\n    groupedTickets.forEach((group) => {\n      if (sorting === \"priority\") {\n        group.tickets.sort((a, b) => b.priority - a.priority);\n      } else {\n        group.tickets.sort((a, b) => a.title.localeCompare(b.title));\n      }\n    });\n\n    return groupedTickets;\n  };\n\n  return (\n    <div className=\"board-container\">\n       <TopBar setGrouping={setGrouping} setSorting={setSorting} />\n      <div className=\"kanban-board\">\n        {groupTickets().map((group) => (\n          <Column \n          key={group.title} \n          title={group.title} \n          tickets={group.tickets} \n          count={group.tickets.length}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}