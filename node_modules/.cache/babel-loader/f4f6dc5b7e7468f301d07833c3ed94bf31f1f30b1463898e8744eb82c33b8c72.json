{"ast":null,"code":"var _jsxFileName = \"/Users/kanishqmersa/Desktop/quicksell/kanban-board/src/components/Column.js\";\n// import React from \"react\";\n// import Card from \"./Card\"; // Import Card component\n// import \"./Column.css\"; // Import column-specific styles\n// import plus from \"../assets/add.svg\";\n// import threedot from \"../assets/3dotmenu.svg\";\n\n// const Column = ({ title, tickets, count }) => {\n//   return (\n//     <div className=\"column\">\n//       {/* Display the title along with the count */}\n//       <h3 className=\"column-title \">\n//         <div className=\"leftBox\" >\n//             {title} \n//             <span>  </span>\n//             {count}\n//         </div>\n//         <div className=\"rightBox\">\n//             <img src={plus} ></img>\n//             <img src={threedot} ></img>\n\n//         </div>\n\n//       </h3>\n\n//       <div className=\"card-list\">\n//         {tickets.map((ticket) => (\n//           <Card key={ticket.id} ticket={ticket} />\n//         ))}\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default Column;\n\nimport React from \"react\";\nimport UserCard from \"./userCard\"; // Import UserCard\nimport PriorityCard from \"./PriorityCard\"; // Import PriorityCard\nimport \"./Column.css\"; // Column-specific CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Column = ({\n  title,\n  tickets,\n  count,\n  grouping\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"column-title\",\n      children: [title, \" (\", count, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: tickets.map(ticket => {\n        // Render UserCard if grouping by user, otherwise render PriorityCard\n        return grouping === \"user\" ? /*#__PURE__*/_jsxDEV(UserCard, {\n          ticket: ticket\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PriorityCard, {\n          ticket: ticket\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","UserCard","PriorityCard","jsxDEV","_jsxDEV","Column","title","tickets","count","grouping","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ticket","id","_c","$RefreshReg$"],"sources":["/Users/kanishqmersa/Desktop/quicksell/kanban-board/src/components/Column.js"],"sourcesContent":["// import React from \"react\";\n// import Card from \"./Card\"; // Import Card component\n// import \"./Column.css\"; // Import column-specific styles\n// import plus from \"../assets/add.svg\";\n// import threedot from \"../assets/3dotmenu.svg\";\n\n\n\n// const Column = ({ title, tickets, count }) => {\n//   return (\n//     <div className=\"column\">\n//       {/* Display the title along with the count */}\n//       <h3 className=\"column-title \">\n//         <div className=\"leftBox\" >\n//             {title} \n//             <span>  </span>\n//             {count}\n//         </div>\n//         <div className=\"rightBox\">\n//             <img src={plus} ></img>\n//             <img src={threedot} ></img>\n\n//         </div>\n\n        \n//       </h3>\n\n//       <div className=\"card-list\">\n//         {tickets.map((ticket) => (\n//           <Card key={ticket.id} ticket={ticket} />\n//         ))}\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default Column;\n\n\nimport React from \"react\";\nimport UserCard from \"./userCard\"; // Import UserCard\nimport PriorityCard from \"./PriorityCard\"; // Import PriorityCard\nimport \"./Column.css\"; // Column-specific CSS\n\nconst Column = ({ title, tickets, count, grouping }) => {\n  return (\n    <div className=\"column\">\n      <h3 className=\"column-title\">\n        {title} ({count})\n      </h3>\n      <div className=\"card-list\">\n        {tickets.map((ticket) => {\n          // Render UserCard if grouping by user, otherwise render PriorityCard\n          return grouping === \"user\" ? (\n            <UserCard key={ticket.id} ticket={ticket} />\n          ) : (\n            <PriorityCard key={ticket.id} ticket={ticket} />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Column;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAC3C,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACtD,oBACEL,OAAA;IAAKM,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBP,OAAA;MAAIM,SAAS,EAAC,cAAc;MAAAC,QAAA,GACzBL,KAAK,EAAC,IAAE,EAACE,KAAK,EAAC,GAClB;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLX,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBJ,OAAO,CAACS,GAAG,CAAEC,MAAM,IAAK;QACvB;QACA,OAAOR,QAAQ,KAAK,MAAM,gBACxBL,OAAA,CAACH,QAAQ;UAAiBgB,MAAM,EAAEA;QAAO,GAA1BA,MAAM,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,gBAE5CX,OAAA,CAACF,YAAY;UAAiBe,MAAM,EAAEA;QAAO,GAA1BA,MAAM,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAChD;MACH,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAlBId,MAAM;AAoBZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}