{"ast":null,"code":"var _jsxFileName = \"/Users/kanishqmersa/Desktop/quicksell/kanban-board/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchTickets } from '../Api';\nimport Card from './Card';\nimport DisplayOptions from './DisplayOptions';\nimport TopBar from './Topbar'; // Import the TopBar component\nimport './Board.css'; // For custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [grouping, setGrouping] = useState('status');\n  const [sorting, setSorting] = useState('priority');\n  useEffect(() => {\n    const getTickets = async () => {\n      const data = await fetchTickets();\n      setTickets(data.tickets);\n    };\n    getTickets();\n  }, []);\n  useEffect(() => {\n    const savedGrouping = localStorage.getItem('grouping');\n    const savedSorting = localStorage.getItem('sorting');\n    if (savedGrouping) setGrouping(savedGrouping);\n    if (savedSorting) setSorting(savedSorting);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('grouping', grouping);\n    localStorage.setItem('sorting', sorting);\n  }, [grouping, sorting]);\n  const groupTickets = () => {\n    let groupedTickets = [];\n    if (grouping === 'status') {\n      groupedTickets = groupBy(tickets, 'status');\n    } else if (grouping === 'user') {\n      groupedTickets = groupBy(tickets, 'user');\n    } else {\n      groupedTickets = groupBy(tickets, 'priority');\n    }\n    if (sorting === 'priority') {\n      groupedTickets.forEach(group => group.tickets.sort((a, b) => b.priority - a.priority));\n    } else {\n      groupedTickets.forEach(group => group.tickets.sort((a, b) => a.title.localeCompare(b.title)));\n    }\n    return groupedTickets;\n  };\n  const groupBy = (arr, key) => {\n    const grouped = arr.reduce((acc, curr) => {\n      (acc[curr[key]] = acc[curr[key]] || []).push(curr);\n      return acc;\n    }, {});\n    return Object.keys(grouped).map(key => ({\n      title: key,\n      tickets: grouped[key]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    style: {\n      paddingTop: '70px'\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(TopBar, {\n      setGrouping: setGrouping,\n      setSorting: setSorting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: groupTickets().map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: group.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), group.tickets.map(ticket => /*#__PURE__*/_jsxDEV(Card, {\n          ticket: ticket\n        }, ticket.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))]\n      }, group.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"vHyK/Smwu0oW/CghhB2Yc/hriv0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","fetchTickets","Card","DisplayOptions","TopBar","jsxDEV","_jsxDEV","Board","_s","tickets","setTickets","grouping","setGrouping","sorting","setSorting","getTickets","data","savedGrouping","localStorage","getItem","savedSorting","setItem","groupTickets","groupedTickets","groupBy","forEach","group","sort","a","b","priority","title","localeCompare","arr","key","grouped","reduce","acc","curr","push","Object","keys","map","className","style","paddingTop","children","fileName","_jsxFileName","lineNumber","columnNumber","ticket","id","_c","$RefreshReg$"],"sources":["/Users/kanishqmersa/Desktop/quicksell/kanban-board/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchTickets } from '../Api';\nimport Card from './Card';\nimport DisplayOptions from './DisplayOptions';\nimport TopBar from './Topbar'; // Import the TopBar component\nimport './Board.css'; // For custom CSS\n\nconst Board = () => {\n  const [tickets, setTickets] = useState([]);\n  const [grouping, setGrouping] = useState('status');\n  const [sorting, setSorting] = useState('priority');\n\n  useEffect(() => {\n    const getTickets = async () => {\n      const data = await fetchTickets();\n      setTickets(data.tickets);\n    };\n    getTickets();\n  }, []);\n\n  useEffect(() => {\n    const savedGrouping = localStorage.getItem('grouping');\n    const savedSorting = localStorage.getItem('sorting');\n\n    if (savedGrouping) setGrouping(savedGrouping);\n    if (savedSorting) setSorting(savedSorting);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('grouping', grouping);\n    localStorage.setItem('sorting', sorting);\n  }, [grouping, sorting]);\n\n  const groupTickets = () => {\n    let groupedTickets = [];\n    \n    if (grouping === 'status') {\n      groupedTickets = groupBy(tickets, 'status');\n    } else if (grouping === 'user') {\n      groupedTickets = groupBy(tickets, 'user');\n    } else {\n      groupedTickets = groupBy(tickets, 'priority');\n    }\n  \n    if (sorting === 'priority') {\n      groupedTickets.forEach(group => group.tickets.sort((a, b) => b.priority - a.priority));\n    } else {\n      groupedTickets.forEach(group => group.tickets.sort((a, b) => a.title.localeCompare(b.title)));\n    }\n  \n    return groupedTickets;\n  };\n\n  const groupBy = (arr, key) => {\n    const grouped = arr.reduce((acc, curr) => {\n      (acc[curr[key]] = acc[curr[key]] || []).push(curr);\n      return acc;\n    }, {});\n    \n    return Object.keys(grouped).map(key => ({\n      title: key,\n      tickets: grouped[key],\n    }));\n  };\n\n  return (\n    <div className=\"board-container\" style={{ paddingTop: '70px' }}> {/* Adjust padding for top bar */}\n      <TopBar setGrouping={setGrouping} setSorting={setSorting} />\n      <div className=\"kanban-board\">\n        {groupTickets().map((group) => (\n          <div key={group.title} className=\"group-column\">\n            <h3>{group.title}</h3>\n            {group.tickets.map((ticket) => (\n              <Card key={ticket.id} ticket={ticket} />\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}